name: Deployment

on:
  push:
    branches: [ develop ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        coverage: none
        tools: composer, cs2pr

    - name: Get Composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Setup cache
      uses: pat-s/always-upload-cache@v1.1.4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        # Use the hash of composer.json as the key for your cache if you do not commit composer.lock.
        # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install dependencies
      run: composer install --prefer-dist --no-suggest --no-progress

    - name: Deploy to server
      if: success()
      uses: easingthemes/ssh-deploy@v2.2.11
      env:
          # Remember this needs to be in PEM format, so make sure you aren't
          # using one of your old keys, Jeremy.
          # If you need a new key, use: ssh-keygen -m PEM -t rsa -b 4096
          SSH_PRIVATE_KEY: ${{ secrets.FOGGY_SSH_KEY }}
          ARGS: "-rltgoDzvO --exclude-from=.deploy_ignore --delete"
          SOURCE: "./"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
